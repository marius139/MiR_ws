;; Auto-generated. Do not edit!


(when (boundp 'mir_actions::RelativeMoveFeedback)
  (if (not (find-package "MIR_ACTIONS"))
    (make-package "MIR_ACTIONS"))
  (shadow 'RelativeMoveFeedback (find-package "MIR_ACTIONS")))
(unless (find-package "MIR_ACTIONS::RELATIVEMOVEFEEDBACK")
  (make-package "MIR_ACTIONS::RELATIVEMOVEFEEDBACK"))

(in-package "ROS")
;;//! \htmlinclude RelativeMoveFeedback.msg.html
(if (not (find-package "GEOMETRY_MSGS"))
  (ros::roseus-add-msgs "geometry_msgs"))


(intern "*DOCKING*" (find-package "MIR_ACTIONS::RELATIVEMOVEFEEDBACK"))
(shadow '*DOCKING* (find-package "MIR_ACTIONS::RELATIVEMOVEFEEDBACK"))
(defconstant mir_actions::RelativeMoveFeedback::*DOCKING* 0)
(intern "*COLLISION*" (find-package "MIR_ACTIONS::RELATIVEMOVEFEEDBACK"))
(shadow '*COLLISION* (find-package "MIR_ACTIONS::RELATIVEMOVEFEEDBACK"))
(defconstant mir_actions::RelativeMoveFeedback::*COLLISION* 1)
(defclass mir_actions::RelativeMoveFeedback
  :super ros::object
  :slots (_state _current_goal _dist_to_goal ))

(defmethod mir_actions::RelativeMoveFeedback
  (:init
   (&key
    ((:state __state) 0)
    ((:current_goal __current_goal) (instance geometry_msgs::PoseStamped :init))
    ((:dist_to_goal __dist_to_goal) (instance geometry_msgs::PoseStamped :init))
    )
   (send-super :init)
   (setq _state (round __state))
   (setq _current_goal __current_goal)
   (setq _dist_to_goal __dist_to_goal)
   self)
  (:state
   (&optional __state)
   (if __state (setq _state __state)) _state)
  (:current_goal
   (&rest __current_goal)
   (if (keywordp (car __current_goal))
       (send* _current_goal __current_goal)
     (progn
       (if __current_goal (setq _current_goal (car __current_goal)))
       _current_goal)))
  (:dist_to_goal
   (&rest __dist_to_goal)
   (if (keywordp (car __dist_to_goal))
       (send* _dist_to_goal __dist_to_goal)
     (progn
       (if __dist_to_goal (setq _dist_to_goal (car __dist_to_goal)))
       _dist_to_goal)))
  (:serialization-length
   ()
   (+
    ;; int8 _state
    1
    ;; geometry_msgs/PoseStamped _current_goal
    (send _current_goal :serialization-length)
    ;; geometry_msgs/PoseStamped _dist_to_goal
    (send _dist_to_goal :serialization-length)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; int8 _state
       (write-byte _state s)
     ;; geometry_msgs/PoseStamped _current_goal
       (send _current_goal :serialize s)
     ;; geometry_msgs/PoseStamped _dist_to_goal
       (send _dist_to_goal :serialize s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; int8 _state
     (setq _state (sys::peek buf ptr- :char)) (incf ptr- 1)
     (if (> _state 127) (setq _state (- _state 256)))
   ;; geometry_msgs/PoseStamped _current_goal
     (send _current_goal :deserialize buf ptr-) (incf ptr- (send _current_goal :serialization-length))
   ;; geometry_msgs/PoseStamped _dist_to_goal
     (send _dist_to_goal :deserialize buf ptr-) (incf ptr- (send _dist_to_goal :serialization-length))
   ;;
   self)
  )

(setf (get mir_actions::RelativeMoveFeedback :md5sum-) "95b697bacf828ff88c46362efe2f6b7e")
(setf (get mir_actions::RelativeMoveFeedback :datatype-) "mir_actions/RelativeMoveFeedback")
(setf (get mir_actions::RelativeMoveFeedback :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
#feedback
int8 DOCKING = 0
int8 COLLISION = 1
int8 state
geometry_msgs/PoseStamped current_goal
geometry_msgs/PoseStamped dist_to_goal


================================================================================
MSG: geometry_msgs/PoseStamped
# A Pose with reference coordinate frame and timestamp
Header header
Pose pose

================================================================================
MSG: std_msgs/Header
# Standard metadata for higher-level stamped data types.
# This is generally used to communicate timestamped data 
# in a particular coordinate frame.
# 
# sequence ID: consecutively increasing ID 
uint32 seq
#Two-integer timestamp that is expressed as:
# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
# time-handling sugar is provided by the client library
time stamp
#Frame this data is associated with
# 0: no frame
# 1: global frame
string frame_id

================================================================================
MSG: geometry_msgs/Pose
# A representation of pose in free space, composed of position and orientation. 
Point position
Quaternion orientation

================================================================================
MSG: geometry_msgs/Point
# This contains the position of a point in free space
float64 x
float64 y
float64 z

================================================================================
MSG: geometry_msgs/Quaternion
# This represents an orientation in free space in quaternion form.

float64 x
float64 y
float64 z
float64 w

")



(provide :mir_actions/RelativeMoveFeedback "95b697bacf828ff88c46362efe2f6b7e")



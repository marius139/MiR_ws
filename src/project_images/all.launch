<launch>
	
  <!-- Realsense node-->	
  <arg name="serial_no"           default=""/>
  <arg name="usb_port_id"         default=""/>
  <arg name="device_type"         default=""/>
  <arg name="json_file_path"      default=""/>
  <arg name="camera"              default="camera"/>
  <arg name="tf_prefix"           default="$(arg camera)"/>
  <arg name="external_manager"    default="false"/>
  <arg name="manager"             default="realsense2_camera_manager"/>

  <arg name="fisheye_width"       default="640"/>
  <arg name="fisheye_height"      default="480"/>
  <arg name="enable_fisheye"      default="true"/>

  <arg name="depth_width"         default="640"/>
  <arg name="depth_height"        default="480"/>
  <arg name="enable_depth"        default="true"/>

  <arg name="infra_width"        default="640"/>
  <arg name="infra_height"       default="480"/>
  <arg name="enable_infra1"       default="true"/>
  <arg name="enable_infra2"       default="true"/>

  <arg name="color_width"         default="640"/>
  <arg name="color_height"        default="480"/>
  <arg name="enable_color"        default="true"/>

  <arg name="fisheye_fps"         default="30"/>
  <arg name="depth_fps"           default="30"/>
  <arg name="infra_fps"           default="30"/>
  <arg name="color_fps"           default="30"/>
  <arg name="gyro_fps"            default="400"/>
  <arg name="accel_fps"           default="250"/>
  <arg name="enable_gyro"         default="true"/>
  <arg name="enable_accel"        default="true"/>

  <arg name="enable_pointcloud"         default="false"/>
  <arg name="pointcloud_texture_stream" default="RS2_STREAM_COLOR"/>
  <arg name="pointcloud_texture_index"  default="0"/>

  <arg name="enable_sync"               default="false"/>
  <arg name="align_depth"               default="false"/>

  <arg name="publish_tf"                default="true"/>
  <arg name="tf_publish_rate"           default="0"/>

  <arg name="filters"                   default=""/>
  <arg name="clip_distance"             default="-2"/>
  <arg name="linear_accel_cov"          default="0.01"/>
  <arg name="initial_reset"             default="false"/>
  <arg name="unite_imu_method"          default=""/>
  <arg name="topic_odom_in"             default="odom_in"/>
  <arg name="calib_odom_file"           default=""/>
  <arg name="publish_odom_tf"           default="true"/>
  <arg name="allow_no_texture_points"   default="false"/>

  <group ns="$(arg camera)">
    <include file="$(find realsense2_camera)/launch/includes/nodelet.launch.xml">
      <arg name="tf_prefix"                value="$(arg tf_prefix)"/>
      <arg name="external_manager"         value="$(arg external_manager)"/>
      <arg name="manager"                  value="$(arg manager)"/>
      <arg name="serial_no"                value="$(arg serial_no)"/>
      <arg name="usb_port_id"              value="$(arg usb_port_id)"/>
      <arg name="device_type"              value="$(arg device_type)"/>
      <arg name="json_file_path"           value="$(arg json_file_path)"/>

      <arg name="enable_pointcloud"        value="$(arg enable_pointcloud)"/>
      <arg name="pointcloud_texture_stream" value="$(arg pointcloud_texture_stream)"/>
      <arg name="pointcloud_texture_index"  value="$(arg pointcloud_texture_index)"/>
      <arg name="enable_sync"              value="$(arg enable_sync)"/>
      <arg name="align_depth"              value="$(arg align_depth)"/>

      <arg name="fisheye_width"            value="$(arg fisheye_width)"/>
      <arg name="fisheye_height"           value="$(arg fisheye_height)"/>
      <arg name="enable_fisheye"           value="$(arg enable_fisheye)"/>

      <arg name="depth_width"              value="$(arg depth_width)"/>
      <arg name="depth_height"             value="$(arg depth_height)"/>
      <arg name="enable_depth"             value="$(arg enable_depth)"/>

      <arg name="color_width"              value="$(arg color_width)"/>
      <arg name="color_height"             value="$(arg color_height)"/>
      <arg name="enable_color"             value="$(arg enable_color)"/>

      <arg name="infra_width"              value="$(arg infra_width)"/>
      <arg name="infra_height"             value="$(arg infra_height)"/>
      <arg name="enable_infra1"            value="$(arg enable_infra1)"/>
      <arg name="enable_infra2"            value="$(arg enable_infra2)"/>

      <arg name="fisheye_fps"              value="$(arg fisheye_fps)"/>
      <arg name="depth_fps"                value="$(arg depth_fps)"/>
      <arg name="infra_fps"                value="$(arg infra_fps)"/>
      <arg name="color_fps"                value="$(arg color_fps)"/>
      <arg name="gyro_fps"                 value="$(arg gyro_fps)"/>
      <arg name="accel_fps"                value="$(arg accel_fps)"/>
      <arg name="enable_gyro"              value="$(arg enable_gyro)"/>
      <arg name="enable_accel"             value="$(arg enable_accel)"/>

      <arg name="publish_tf"               value="$(arg publish_tf)"/>
      <arg name="tf_publish_rate"          value="$(arg tf_publish_rate)"/>

      <arg name="filters"                  value="$(arg filters)"/>
      <arg name="clip_distance"            value="$(arg clip_distance)"/>
      <arg name="linear_accel_cov"         value="$(arg linear_accel_cov)"/>
      <arg name="initial_reset"            value="$(arg initial_reset)"/>
      <arg name="unite_imu_method"         value="$(arg unite_imu_method)"/>
      <arg name="topic_odom_in"            value="$(arg topic_odom_in)"/>
      <arg name="calib_odom_file"          value="$(arg calib_odom_file)"/>
      <arg name="publish_odom_tf"          value="$(arg publish_odom_tf)"/>
      <arg name="allow_no_texture_points"  value="$(arg allow_no_texture_points)"/>
    </include>
  </group>

<!--Mir driver-->
<!--
<arg name="tf_prefix" default="" doc="TF prefix to use for all of MiR's TF frames"/>
-->
  <arg name="mir_hostname" default="192.168.12.20" />

  <arg name="disable_map" default="false" doc="Disable the map topic and map -> odom_comb TF transform from the MiR" />

  <param name="tf_prefix" type="string" value="$(arg tf_prefix)"/>

  <!-- URDF -->
  <include file="$(find mir_description)/launch/upload_mir_urdf.launch" />

  <!-- Robot state publisher -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
    <remap from="/tf"        to="tf_rss" />
    <remap from="/tf_static" to="tf_static_rss" />
  </node>

  <!-- remove those TFs that are also published by the MiR to avoid conflicts -->
  <node name="tf_remove_state_publisher_frames" pkg="mir_driver" type="tf_remove_child_frames.py" output="screen">
    <remap from="tf_in"         to="tf_rss" />
    <remap from="tf_out"        to="/tf" />
    <remap from="tf_static_in"  to="tf_static_rss" />
    <remap from="tf_static_out" to="/tf_static" />
    <rosparam param="remove_frames">
      - base_link
      - front_laser_link
      - back_laser_link
      - camera_top_link
      - camera_top_depth_optical_frame
      - camera_floor_link
      - camera_floor_depth_optical_frame
      - imu_link
    </rosparam>
  </node>

  <!-- MiR base -->
  <group if="$(arg disable_map)">
    <node name="mir_bridge" pkg="mir_driver" type="mir_bridge.py" output="screen">
      <param name="hostname" value="$(arg mir_hostname)" />
      <param name="tf_prefix" value="$(arg tf_prefix)" />
      <remap from="map" to="map_mir" />
      <remap from="map_metadata" to="map_metadata_mir" />
      <remap from="rosout" to="/rosout" />
      <remap from="rosout_agg" to="/rosout_agg" />
      <remap from="tf" to="tf_mir" />
    </node>

    <!-- remove the map -> odom_comb (or map -> odom) TF transform -->
    <node name="tf_remove_mir_map_frame" pkg="mir_driver" type="tf_remove_child_frames.py" output="screen">
      <remap from="tf_in"         to="tf_mir" />
      <remap from="tf_out"        to="/tf" />
      <rosparam param="remove_frames">
        - odom_comb     # on MiR software 1.9, the frame is called odom_comb
        - odom          # on MiR software 2.0, the frame is called odom
      </rosparam>
    </node>
  </group>
  <group unless="$(arg disable_map)">
    <node name="mir_bridge" pkg="mir_driver" type="mir_bridge.py" output="screen">
      <param name="hostname" value="$(arg mir_hostname)" />
      <param name="tf_prefix" value="$(arg tf_prefix)" />
      <remap from="map" to="/map" />
      <remap from="map_metadata" to="/map_metadata" />
      <remap from="rosout" to="/rosout" />
      <remap from="rosout_agg" to="/rosout_agg" />
      <remap from="tf" to="/tf" />
    </node>
  </group>

  <node name="b_rep117_laser_filter" pkg="mir_driver" type="rep117_filter.py" output="screen">
    <remap from="scan" to="b_scan" />
    <remap from="scan_filtered" to="b_scan_rep117" />
  </node>

  <node name="f_rep117_laser_filter" pkg="mir_driver" type="rep117_filter.py" output="screen">
    <remap from="scan" to="f_scan" />
    <remap from="scan_filtered" to="f_scan_rep117" />
  </node>

  <node name="fake_mir_joint_publisher" pkg="mir_driver" type="fake_mir_joint_publisher.py" output="screen" />

<!-- Other nodes -->

<!-- Sound node -->
<node name="soundplay_node" pkg="sound_play" type="soundplay_node.py"/>

<!-- Projector and sound node -->
<node pkg="project_images" type="project_images" name="project_images"/>

<!-- Simple navigation goals -->
<node pkg="simple_navigation_goals" type="simple_navigation_goals" 	name="simple_navigation_goals" output="screen"/>

</launch>

